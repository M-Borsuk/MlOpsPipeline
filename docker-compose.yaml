
version: '3.3'

services:
    db:
        restart: always
        image: mysql/mysql-server:5.7.28
        container_name: mlflow_db
        ports:
            - "3306:3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql

    mlflow-webui:
        restart: always
        build: ./DockerFiles/mlflow
        image: mlflow_server
        container_name: mlflow_server
        expose:
            - "5000"
        ports:
            - 5000:5000
        networks:
            - frontend
            - backend
        environment:
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - GUNICORN_CMD_ARGS=${GUNICORN_CMD_ARGS}
            - AWS_PROJECT_DIRECTORY=${AWS_PROJECT_DIRECTORY}
            - S3_BUCKET_NAME=${S3_BUCKET_NAME}
        command: mlflow ui --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://${S3_BUCKET_NAME}/${AWS_PROJECT_DIRECTORY}/ --host 0.0.0.0    

    minio:
        restart: always
        image: minio/minio:RELEASE.2021-06-14T01-29-23Z
        container_name: mlflow_s3
        expose:
            - "9000"
        ports:
            - 9000:9000
        command: server /data
        networks: 
            - backend
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data

    airflow:
        build: ./DockerFiles/airflow
        restart: always
        container_name: airflow
        networks:
            - backend
        volumes:
            - ./mnt/airflow/dags:/opt/airflow/dags
        ports:
            - 8080:8080
        command: airflow webserver 
networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    dbdata:
    minio_data:
    airflow: